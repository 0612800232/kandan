class Kandan.Helpers.Channels

  @options:
    autoScrollThreshold: 0.90
    maxActivities: <%= Kandan::Config.options[:per_page] %>

  @pastAutoScrollThreshold: (channelId)->
    currentPosition     = @currentScrollPosition channelId
    totalHeight         = $(document).height() - $(window).height()
    scrollPercentage    = (currentPosition) / (totalHeight)
    scrollPercentage > @options.autoScrollThreshold

  @scrollToLatestMessage: (channelId)->
    console.log("scrolling to last message")
    $(document).scrollTop($(document).height()+9000)

  @currentScrollPosition: (channelId)->
    console.log("current scroll position")
    $(document).scrollTop()

  @channel_activities_el: (channelId)->
    $("#channel-activities-#{channelId}")

  @channel_pagination_el: (channelId)->
    $("#channels-#{channelId} .pagination")

  @selected_tab: ()->
    $('#kandan').tabs('option', 'selected')

  @getActiveChannelId: ()->
    if $(document).data('active_channel_id') == undefined
      return $("#kandan .ui-tabs-panel")
        .eq(@selected_tab())
        .data('channel_id')
    else
      return $(document).data('active_channel_id')


  @confirmDeletion: ()->
    return confirm("Really delete the channel?")


  @flushActivities: (channelId)->
    $channelActivities = $("#channel-activities-#{channelId}")
    if $channelActivities.children().length == @options.maxActivities + 1
      $channelActivities.children().first().remove()
      oldest = $channelActivities.children().first().data("activity_id")
      $channelActivities.prev().data("oldest", oldest)
      @channel_pagination_el(channelId).show()


  @confirmAndDeleteChannel: (channel, tabIndex)->
    return false if @confirmDeletion() == false
    channel.destroy({success: ()=>
      $("#kandan").tabs("remove", tabIndex)
    })


  @getChannelIdByTabIndex: (tabIndex)->
    $("#kandan .ui-tabs-panel")
      .eq(tabIndex)
      .data('channel_id')

  @getTabIndexByChannelId: (channelId)->
    $("#channels-#{channelId}").prevAll("div").length

  @deleteChannelById: (channelId)->
    if @channelExists(channelId)
      tabIndex = @getTabIndexByChannelId(channelId)
      @deleteChannelByTabIndex(tabIndex, true)

  @deleteChannelByTabIndex: (tabIndex, deleted)->
    # NOTE gotcha, 0 index being passed a natural index from the html views
    deleted = deleted || false
    channelId = @getChannelIdByTabIndex(tabIndex)
    throw "NO CHANNEL ID" if channelId == 'undefined'
    channel = new Kandan.Models.Channel({id: channelId})
    return @confirmAndDeleteChannel(channel, tabIndex) if not deleted


  @channelExists: (channelId)->
    return true if $("#channels-#{channelId}").length > 0
    false


  @createChannelArea: (channel)->
    channelArea = "#channels-#{channel.get('id')}"
    totalTabs = $("#kandan").tabs("length")
    $createTab = $("#create_channel").parents('li').detach()
    $("#kandan").tabs('add', channelArea, "#{channel.get("name")}", totalTabs)
    $createTab.appendTo('ul.ui-tabs-nav')
    view = new Kandan.Views.ChannelPane({channel: channel})
    view.render $(channelArea)
    $(channelArea).data('channel_id', channel.get('id'))


  @newActivityView: (activityAttributes)->
    activity = new Kandan.Models.Activity(activityAttributes)
    activityView  = new Kandan.Views.ShowActivity({activity: activity})
    return activityView

  @createChannelIfNotExists: (activityAttributes)->
    if activityAttributes.channel && (not @channelExists(activityAttributes.channel_id))
      @createChannelArea(new Kandan.Models.Channel(activityAttributes.channel))


  @addActivity: (activityAttributes, state)->
    @createChannelIfNotExists(activityAttributes)

    if activityAttributes.channel_id
      @add_message(activityAttributes, state)
    else
      @add_notification(activityAttributes)

    channelId = activityAttributes.channel_id || @getActiveChannelId()
    @scrollToLatestMessage(channelId) if @pastAutoScrollThreshold(channelId)



  @add_message: (activityAttributes, state)->
    @channel_activities_el(activityAttributes.channel_id)
      .append(@newActivityView(activityAttributes).render().el)
    @flushActivities(activityAttributes.channel_id)
    Kandan.Helpers.Utils.notifyInTitleIfRequired()
    @setPaginationData(activityAttributes.channel_id)


  @add_notification: (activityAttributes)->
    $channelElements = $(".channel-activities")
    activityAttributes["created_at"] = new Date()
    for el in $channelElements
      $(el).append(@newActivityView(activityAttributes).render().el)
      @flushActivities($(el).closest(".ui-widget-content").data("channel_id"))
      @setPaginationData(activityAttributes.channel_id)


  @setPaginationState: (channelId, moreActivities, oldest)->
    @channel_pagination_el(channelId).data('oldest', oldest)
    console.log "pagination element", moreActivities, @channel_pagination_el(channelId)
    if moreActivities == true
      @channel_pagination_el(channelId).show()
    else
      @channel_pagination_el(channelId).hide()


  @setPaginationData: (channel_id)->
    $oldest_activity = @channel_activities_el(channel_id).find(".activity").first()
    if $oldest_activity.length != 0
      @channel_pagination_el(channel_id).data('oldest', $oldest_activity.data('activity_id'))
